#!/usr/bin/python
import os
import sys
import time
from t2Mon.XRootD.xrootd import execute
from t2Mon.daemon import Daemon
from t2Mon.common.logger import getLogger

DAEMONNAME = 'xrootd-mon'
LOGGER = getLogger('/var/log/t2Mon/%s/' % DAEMONNAME)


class MyDaemon(Daemon):
    def run(self, runTimer):
        while True:
            runTimer = int(runTimer)
            startTime = int(time.time())
            try:
                execute(LOGGER)
            except KeyboardInterrupt as ex:
                LOGGER.critical("Received KeyboardInterrupt: %s ", ex)
                exit(3)
            except:
                excType, excValue = sys.exc_info()[:2]
                LOGGER.critical("Error details. ErrorType: %s, ErrMsg: %s", str(excType.__name__), excValue)
                time.sleep(20)
            endTime = int(time.time())
            sleepTime = int(runTimer - (endTime - startTime))
            if sleepTime > 0:
                LOGGER.info('Sleeping %s seconds' % sleepTime)
                time.sleep(int(sleepTime))

if __name__ == "__main__":
    if not os.path.isdir('/var/log/t2Mon/%s/' % DAEMONNAME):
        os.makedirs('/var/log/t2Mon/%s/' % DAEMONNAME)
    daemon = MyDaemon('/tmp/daemon-%s.pid' % DAEMONNAME,
                      stdout='/var/log/t2Mon/%s/std.out' % DAEMONNAME,
                      stderr='/var/log/t2Mon/%s/std.err' % DAEMONNAME)
    if len(sys.argv) >= 2:
        if sys.argv[1] == 'start':
            if len(sys.argv) != 3:
                print('Usage: %s start runTimer' % sys.argv[0])
                sys.exit(2)
            daemon.start(sys.argv[2])
        elif sys.argv[1] == 'stop':
            daemon.stop()
        elif sys.argv[1] == 'restart':
            if len(sys.argv) != 3:
                print('Usage: %s restart runTimer' % sys.argv[0])
                sys.exit(2)
            daemon.restart(sys.argv[2])
        elif sys.argv[1] == 'status':
            daemon.status()
        else:
            print("Unknown command")
            sys.exit(2)
        sys.exit(0)
    else:
        print("usage: %s start|stop|status|restart [runTimer]" % sys.argv[0])
        sys.exit(2)
